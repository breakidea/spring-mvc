package org.ionnic.config.security;import java.util.UUID;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;/** * @author apple * */public class TokenRepository {	/**	 * @param req	 * @return	 */	public static CsrfToken loadToken(HttpServletRequest req) {		HttpSession session = req.getSession(true);		Object token = session.getAttribute("token");		if (token == null) {			return null;		} else {			return (CsrfToken) token;		}	}	/**	 * @param session	 * @param tokenValue	 */	public static CsrfToken generateToken(HttpServletRequest req, String tokenValue) {		if (null == tokenValue) {			tokenValue = UUID.randomUUID().toString();		}		CsrfToken token = new CsrfToken("token", "cstf-token", tokenValue);		HttpSession session = req.getSession(true);		session.setAttribute("token", token);		return token;	}	/**	 * @param request	 * @param session	 * @return	 */	public static boolean checkToken(HttpServletRequest req) {		CsrfToken csrfToken = loadToken(req);		if (csrfToken == null) {			return false;		} else {			String tokenValue = req.getHeader(csrfToken.getHeaderName());			if (tokenValue == null) {				tokenValue = req.getParameter(csrfToken.getParameterName());			}			return csrfToken.getToken().equals(tokenValue);		}	}}