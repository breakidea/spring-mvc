package org.ionnic.config.support;import java.util.UUID;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;/** * @author apple * */public class TokenRepository {	public static final String SESSION_NAME = CsrfToken.class.getName() + ".CSRF_TOKEN";	public static final String HEADER_NAME = "X-Requested-Token";	public static final String PARAMETER_NAME = "token";	/**	 * @param request	 * @param session	 * @return	 */	public static boolean checkToken(HttpServletRequest req) {		CsrfToken csrfToken = loadToken(req);		if (csrfToken == null) {			return false;		} else {			String tokenValue = req.getHeader(csrfToken.getHeaderName());			if (tokenValue == null) {				tokenValue = req.getParameter(csrfToken.getParameterName());			}			return csrfToken.getToken().equals(tokenValue);		}	}	/**	 * @param req	 * @param forceUpdate	 *	 * @return	 */	public static CsrfToken generateToken(HttpServletRequest req) {		CsrfToken token = loadToken(req);		if (token == null) {			token = new CsrfToken(HEADER_NAME, PARAMETER_NAME, "" + UUID.randomUUID());			HttpSession session = req.getSession(true);			session.setAttribute(SESSION_NAME, token);		}		return token;	}	/**	 * @param req	 * @return	 */	public static CsrfToken loadToken(HttpServletRequest req) {		HttpSession session = req.getSession(true);		Object token = session.getAttribute(SESSION_NAME);		if (token == null) {			return null;		} else {			return (CsrfToken) token;		}	}	/**	 * @param req	 */	public static void removeToken(HttpServletRequest req) {		HttpSession session = req.getSession(true);		session.removeAttribute(SESSION_NAME);	}}