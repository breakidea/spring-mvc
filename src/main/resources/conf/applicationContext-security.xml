<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <beans:description>
        This file defines all of the necessary security
        configuration.

        It is split from the
        applicationContext.xml file to make
        it clearer
        which beans and configuration elements are related to
        security. It also
        makes it more reusable for other projects, as this
        file can be copied to replicate the security configuration.
    </beans:description>
    
	<!-- 安全配置 -->
    <beans:bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
        <filter-chain-map path-type="ant">
            <filter-chain pattern="/**" filters="firstRequestFilter,lastRequestFilter" />
        </filter-chain-map>
    </beans:bean>

	<!-- 认证管理 -->
    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5" />
            <user-service>
                <user name="admin" authorities="ROLE_ADMIN" password="21232f297a57a5a743894a0e4a801fc3" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
    
    <!-- 定义过滤 -->
    <beans:bean id="firstRequestFilter" class="org.ionnic.core.filter.UriExtensionFilter" />
    <beans:bean id="lastRequestFilter" class="org.ionnic.core.filter.RefererCheckFilter" />
    
    <!-- 异常处理 -->
    <beans:bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl" />

    <beans:bean id="HttpSessionCsrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
        <beans:property name="parameterName" value="token" />
        <beans:property name="headerName" value="X-Requested-Token" />
    </beans:bean>
</beans:beans>