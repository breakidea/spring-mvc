<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Velocity Configuration -->
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="configLocation" value="/WEB-INF/velocity.properties" />
		<property name="resourceLoaderPath" value="/" />
	</bean>

	<!-- Create the XStream marshaller bean -->
	<bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="autodetectAnnotations" value="true" />
		<!-- Set some properties to make the outputted xml look nicer -->
		<!-- <property name="aliases">
			<map>
			<entry key="people" value="org.ionnic.app.model.PeopleWrapper" />
			<entry key="apimessage" value="org.ionnic.app.model.ApiMessage" />
			<entry key="person" value="org.ionnic.app.model.Person" />
			</map>
			</property>
			<property name="implicitCollections">
			<map>
			<entry key="org.ionnic.app.model.PeopleWrapper" value="people" />
			</map>
			</property> -->
	</bean>

	<!-- Configuration: automatically scan the package name -->
	<context:component-scan base-package="org.ionnic.app" />

	<!-- Activates support for XML and JSON mapping if they are on the class path. -->
	<mvc:annotation-driven>
		<!-- we are adding an XStream converter to the default list. It seems that if we do not include this section, then marshalling
			will work, but unmarshalling will not, instead we get a "Unsupported Media Type". -->
		<mvc:message-converters>
			<!-- Configure the XStream message converter -->
			<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
				<property name="marshaller" ref="xstreamMarshaller" />
				<property name="unmarshaller" ref="xstreamMarshaller" />
			</bean>
		</mvc:message-converters>

		<!-- mvc:return-value-handlers -->
		<mvc:return-value-handlers>
			<bean class="org.springframework.web.servlet.mvc.method.annotation.ModelAndViewMethodReturnValueHandler" />
		</mvc:return-value-handlers>
	</mvc:annotation-driven>

	<!-- interceptors' configure -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*" />
			<bean class="org.ionnic.core.plugin.Interceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- <bean class="org.ionnic.core.plugin.Resolver"> <property name="resolvers"> <map> <entry key="jsp"> <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> <property name="prefix" value="/META-INF/jsp/"
		/> <property name="suffix" value=".jsp" /> <property name="contentType" value="text/html;charset=utf-8" /> <property name="order"
		value="1" /> <property name="alwaysInclude" value="true" /> </bean> </entry> <entry key="vm"> <bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="exposeRequestAttributes" value="true" /> <property name="contentType" value="text/html;charset=utf-8" />
		<property name="prefix" value="" /> <property name="suffix" value=".vm" /> </bean> </entry> </map> </property> </bean> -->

	<!-- Configures the different content types the servlet can handle. -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />

		<!-- Support parameter matching -->
		<property name="favorParameter" value="true" />
		<property name="parameterName" value="format" />

		<!-- Accept-Header -->
		<property name="ignoreAcceptHeader" value="true" />

		<!-- Suffix matching support -->
		<property name="favorPathExtension" value="true" />

		<!-- if no content type is specified, return json. -->
		<property name="defaultContentType" value="text/html" />

		<!-- the mapping from file extensions to media types. -->
		<property name="mediaTypes">
			<map>
				<entry key="ajax" value="application/json" />
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
			</map>
		</property>

		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/META-INF/jsp/" />
					<property name="suffix" value=".jsp" />
					<property name="contentType" value="text/html;charset=utf-8" />
					<property name="order" value="1" />
					<property name="alwaysInclude" value="true" />
				</bean>
				<!-- <bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver"> <property name="prefix" value=""
					/> <property name="suffix" value=".vm" /> </bean> -->
			</list>
		</property>

		<property name="defaultViews">
			<list>
				<!-- JSON -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="extractValueFromSingleKeyModel" value="true" />
					<property name="contentType" value="application/json;charset=UTF-8" />
				</bean>

				<!-- JAXB XML -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg ref="xstreamMarshaller" />
					<property name="modelKey" value="data" />
				</bean>
			</list>
		</property>
	</bean>


	<!-- Configuration: access to static resource -->
	<mvc:default-servlet-handler />
</beans>