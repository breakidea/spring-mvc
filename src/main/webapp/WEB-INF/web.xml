<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd ">
	<display-name>spring-mvc</display-name>

	<description>This project will allow you to start off with spring MVC.</description>
	<!-- context-param >> listener >> fileter >> servlet -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:conf/applicationContext.xml</param-value>
	</context-param>

	<!-- Bootstrap listener to start up and shut down Spring's root WebApplicationContext. Delegates to ContextLoader. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- characterEncoding filter -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<servlet-name>springServlet</servlet-name>
	</filter-mapping>

	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>springSecurityFilterChain</param-value>
		</init-param>
	</filter>

	<!-- Adding these filters activates Spring security. -->
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<servlet-name>springServlet</servlet-name>
	</filter-mapping>


	<!-- Using PUT and DELETE methods in Spring MVC. e.g <input name="__method" value="DELETE" /> -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
		<init-param>
			<param-name>methodParam</param-name>
			<param-value>__method</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>springServlet</servlet-name>
	</filter-mapping>

	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

		<!-- The spring-servlet.xml class is loaded automatically, because Spring will search for a file named <servlet-name>-servlet.xml 
			in the WEB-INF directory. -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:conf/spring-servlet.xml</param-value>
		</init-param>

		<!-- load-on-startup means that the servlet will be loaded straight away, rather than waiting for the first request. In 
			our case, there is only one servlet, so we might as well load it straight away. -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

</web-app>
