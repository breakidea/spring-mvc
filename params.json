{
  "name": "Lotus",
  "tagline": "Yet another spring-mvc demo project with better structure!",
  "body": "\r\nlotus\r\n===\r\n\r\n[![Build Status](https://travis-ci.org/mycoin/spring-mvc.svg?branch=master)](https://travis-ci.org/mycoin/spring-mvc) This project will allow you to start off on the good foot with spring MVC. In this showcase you'll see the following features in action:\r\n\r\n- Pure maven dependencies\r\n- Embedded Jetty\r\n- Mapping Requests\r\n- Message Converters\r\n- Message Source\r\n- Rendering Layout Views\r\n- Exception Handling\r\n\r\n\r\n### Get start\r\n---\r\nImport the mysql script `lotus.web/db.sql` , modify the db config in `applicationContext-db.xml`~\r\n\r\nClone the repository and:\r\n\r\n```shell\r\nmvn -U clean install -DdownloadSources=true -Dmaven.test.skip=true\r\ncd lotus.web && mvn jetty:run\r\n```\r\n\r\nor\r\n\r\nImport the project as a maven project into your IDE,  Run the class `net.breakidea.web.Main`\r\nthen open <http://127.0.0.1:8080/index.html>\r\n\r\n\r\n### Overview\r\n---\r\nThis is an application to demo the implementation of a REST API.\r\n> BTW: XML responses is not supported.\r\n\r\nA better project structure is required:\r\n\r\n- `lotus.web` the webapp contains the portal project.\r\n- `lotus.api` api module, \r\n- `lotus.public` front  page, based on `webpack` + `Vue`.\r\n- `lotus.common` config and application support, important config.\r\n\r\n##### View\r\n\r\nThe `Layout` support. The velocity resource paths are:\r\n- `/WEB-INF/views/` The primary template path\r\n- `/WEB-INF/common/` velocity code snippets\r\n- `~/output/` static external templates from SVN ? FTP or other services, At the same time, you can config it at `app:global.properties`\r\n\r\nWrite your awesome template that assigned by the Controller in `/WEB-INF/views/` folder. \r\n\r\nCommon modules such as header or footer locate in `/WEB-INF/common/`, then use `context.render(name, data)` to import it.\r\n\r\nTemplates that frequently modified will be managed by other service, then sync then to `~/output/` folder~\r\n\r\nFor context, the default attributes are:\r\n\r\n- `application` the `WebApplicationContext` instance\r\n- `request` the current `HttpServletRequest`\r\n- `response` the current `HttpServletResponse`\r\n- `page` the current context helper,  `net.breakidea.common.core.ContextHolder`\r\n- `context` the context it's self\r\n- `util` tool, static class for `net.breakidea.common.web.view.support.Utils`\r\n\r\n> see [@ContextHolder](https://github.com/mycoin/lotus/blob/feature/spring/lotus.common/src/main/java/net/breakidea/common/web/view/support/ContextHolder.java) for detail\r\n\r\n##### macro\r\n\r\nLots of macros , such as `block` ,  `extends` , `showContent` , `showInet` , `showMessage`  and so on. [click here](https://github.com/mycoin/lotus/blob/master/lotus.common/src/main/resources/modules/global.vm) for details.\r\n\r\n##### message and url\r\n\r\nUse `MessageSource` to manage texts, message and config. see file `applicationContext.xml`\r\n\r\n- global message and important config `classpath:global.properties`\r\n- application base url (with domain and `/` ) `system.server.base`  e.g http://www.baidu.com/\r\n- CDN style resource `system.server.static`  e.g https://astyle.alicdn.com/1.0.0/ , see more [at here](https://github.com/mycoin/lotus/blob/master/lotus.common/src/main/resources/modules/global.vm#L126) \r\n\r\n\r\n\r\n### Main.java\r\n\r\nThis is the class that runs an embedded Jetty server with the servlet. \r\n\r\n---\r\n\r\nFreeBSD License",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}